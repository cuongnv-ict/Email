/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cs.handmail.panelmail;

import cs.handmail.Controller.InboxController;
import cs.handmail.dialog.DialogMail;
import java.awt.event.MouseEvent;
import javax.mail.Message;
import javax.mail.Store;

/**
 *
 * @author Venus-NS
 */
public class InboxMail extends javax.swing.JPanel {

//    Store store;
    Message [] mess; 
    /**
     * Creates new form InboxMail
     */
    public InboxMail(Store store) {
        initComponents();
        InboxController inbox = new InboxController(tableInbox,store);
        inbox.setTableData();
        mess = inbox.getMessage();
        TableMouseListener();
    }

    void TableMouseListener()
    {
        tableInbox.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e); //To change body of generated methods, choose Tools | Templates.
                if(e.getClickCount()==2)
                {
                        int row = tableInbox.rowAtPoint(e.getPoint());
                        int col = tableInbox.columnAtPoint(e.getPoint());
                        if(row>=0&&col>=1)
                        {
                            DialogMail dialog = new DialogMail(null, false, mess[row]);
                            dialog.show();
                        }
                }
            }

            
        });
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableInbox = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();

        tableInbox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tableInbox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Address", "Subject", "Description", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableInbox);
        if (tableInbox.getColumnModel().getColumnCount() > 0) {
            tableInbox.getColumnModel().getColumn(0).setMinWidth(10);
            tableInbox.getColumnModel().getColumn(0).setPreferredWidth(20);
            tableInbox.getColumnModel().getColumn(0).setMaxWidth(20);
            tableInbox.getColumnModel().getColumn(1).setMinWidth(70);
            tableInbox.getColumnModel().getColumn(1).setPreferredWidth(300);
            tableInbox.getColumnModel().getColumn(2).setMinWidth(150);
            tableInbox.getColumnModel().getColumn(2).setPreferredWidth(300);
            tableInbox.getColumnModel().getColumn(2).setMaxWidth(500);
            tableInbox.getColumnModel().getColumn(3).setMinWidth(100);
            tableInbox.getColumnModel().getColumn(3).setPreferredWidth(150);
            tableInbox.getColumnModel().getColumn(3).setMaxWidth(200);
            tableInbox.getColumnModel().getColumn(4).setMinWidth(120);
            tableInbox.getColumnModel().getColumn(4).setPreferredWidth(160);
            tableInbox.getColumnModel().getColumn(4).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 49, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableInbox;
    // End of variables declaration//GEN-END:variables
}
