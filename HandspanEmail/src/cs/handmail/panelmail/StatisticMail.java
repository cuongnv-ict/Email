/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cs.handmail.panelmail;

import cs.handmail.dailog.DLElement;
import cs.handmail.dailog.EditAcount;
import cs.handmail.file.DataUserFile;
import cs.handmail.file.ListAcountFile;
import cs.handmail.mail.SessionEmail;
import cs.handmail.processtable.TableListAcount;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;
import java.util.Properties;
import java.util.TreeMap;
import javax.mail.Message;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;

/**
 *
 * @author Nguyen Van Cuong
 */
public class StatisticMail extends javax.swing.JPanel {

    private ListAcountFile listAcountFile;
    private SessionEmail sessionEmail;
    private Properties properties;
    private TableListAcount tableListAcount;
    private Thread th;
    private boolean flags;
    private DataUserFile dataUserFile;

    /**
     * Creates new form ListPerson
     *
     * @param smail
     */
    public StatisticMail(SessionEmail smail) {
        initComponents();
        listAcountFile = new ListAcountFile();
        sessionEmail = smail;
        tableListAcount = new TableListAcount();
        dataUserFile = new DataUserFile();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("YYYY");
        Date date = new Date();

        th = new Thread() {
            @Override
            public void run() {
                statisticEmailAcount();
                load.setVisible(false);
                flags = true;
                month.enable(true);
                year.enable(true);
            }
        };
        flags = false;
        month.setSelectedIndex(date.getMonth());
        year.setSelectedIndex(Integer.parseInt(simpleDateFormat.format(date)) - 2010);
        flags = true;
        th.start();
    }

    private void statisticEmailAcount() {
        properties = listAcountFile.readListAcount();
        if (properties != null) {
            int mon = month.getSelectedIndex() + 1;
            int ye = year.getSelectedIndex() + 2010;
            int id = 1;
            tableListAcount.clearTable(tableAcount);
            ArrayList<Thread> arrThread = new ArrayList<>();
            Map<String, Map<String, Message[]>> map = new TreeMap();
            properties.keySet().stream().map((key) -> new Thread() {
                @Override
                public void run() {
                    Map<String, Message[]> msgs = sessionEmail.statisticAddressEmail(mon, ye, String.valueOf(key), dataUserFile.decryptPass(String.valueOf(properties.get(key))));
                    // tableListAcount.statisticEmail(tableAcount, msgs, String.valueOf(key), 0);
                    map.put(String.valueOf(key), msgs);
                }
            }).forEach((t) -> {
                t.start();
                arrThread.add(t);
            });
            while (!arrThread.isEmpty()) {
                ArrayList<Thread> arr = new ArrayList<>();
                for (Thread x : arrThread) {
                    if (!x.isAlive()) {
                        arr.add(x);
                    }
                }
                arrThread.removeAll(arr);
            }
            int count = 1;
            for (String key : map.keySet()) {
                tableListAcount.statisticEmail(tableAcount, map.get(key), String.valueOf(key), count);
                count++;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAcount = new javax.swing.JTable(){
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column){

                Component c = super.prepareRenderer(renderer, row, column);
                c.setBackground(row % 2 == 1 ? Color.LIGHT_GRAY : Color.WHITE);
                c.setForeground(Color.BLACK);
                return c;
            }
        };
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        month = new javax.swing.JComboBox<>();
        year = new javax.swing.JComboBox<>();
        load = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        tableAcount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "STT", "Email", "Số email được yêu cầu trả lời", "Số email nhân viên đã trả lời", "Số email chưa trả lời trong 24h", "Thời gian trả lời trung bình mỗi email (hh::mm)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAcount);
        if (tableAcount.getColumnModel().getColumnCount() > 0) {
            tableAcount.getColumnModel().getColumn(0).setResizable(false);
            tableAcount.getColumnModel().getColumn(0).setPreferredWidth(15);
            tableAcount.getColumnModel().getColumn(1).setMinWidth(50);
            tableAcount.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableAcount.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel1.setPreferredSize(new java.awt.Dimension(419, 43));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Time:");

        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        month.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                monthItemStateChanged(evt);
            }
        });

        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040" }));
        year.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearItemStateChanged(evt);
            }
        });

        load.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/loader-newui.gif"))); // NOI18N

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/table-export.png"))); // NOI18N
        jLabel6.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel6.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel6.setPreferredSize(new java.awt.Dimension(32, 32));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/061065-blue-jelly-icon-people-things-eye.png"))); // NOI18N
        jLabel5.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel5.setMinimumSize(new java.awt.Dimension(32, 32));
        jLabel5.setPreferredSize(new java.awt.Dimension(32, 32));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(load))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(load, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void monthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_monthItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED && flags) {
            runSelected();
            // do something with object
        }
    }//GEN-LAST:event_monthItemStateChanged

    private void yearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED && flags) {
            runSelected();
            // do something with object
        }
    }//GEN-LAST:event_yearItemStateChanged

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        TableModel tableModel = tableAcount.getModel();
        ArrayList<String> mails = new ArrayList<>();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            if ((Boolean) tableModel.getValueAt(i, 0) == true) {
                mails.add(String.valueOf(tableModel.getValueAt(i, 2)));
            }
        }
        if (mails.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hãy chọn nhân viên muốn xem.", "", JOptionPane.INFORMATION_MESSAGE);
        } else if (mails.size() != 1) {
            JOptionPane.showMessageDialog(null, "Bạn chỉ được phép xem một người.", "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int mon = month.getSelectedIndex() + 1;
            int ye = year.getSelectedIndex() + 2010;
            DLElement e = new DLElement(null, true,tableListAcount.getInfo(), mails.get(0),ye,mon);
            e.setVisible(true);
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    public void runSelected() {
        load.setVisible(true);
        if (th.isAlive()) {
            th.stop();
        }
        th = new Thread() {
            @Override
            public void run() {
                statisticEmailAcount();
                load.setVisible(false);
            }
        };
        th.start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel load;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JTable tableAcount;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables
}
